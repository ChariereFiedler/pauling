version: 2
jobs:

  build_mobile:
    working_directory: ~/pauling
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: mobile-deps-{{ .Branch }}-{{ checksum "mobile/yarn.lock" }}
      - run:
          name: install dependencies
          working_directory: ~/pauling/mobile
          command: yarn install
      - save_cache:
          key: mobile-deps-{{ .Branch }}-{{ checksum "mobile/yarn.lock" }}
          paths:
              - ~/pauling/mobile/node_modules

  lint_mobile:
    working_directory: ~/pauling
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: mobile-deps-{{ .Branch }}-{{ checksum "mobile/yarn.lock" }}
      - run:
          name: lint code
          working_directory: ~/pauling/mobile
          command: yarn lint
      - run:
          name: static type check
          working_directory: ~/pauling/mobile
          command: yarn flow

  test_mobile:
    working_directory: ~/pauling
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: mobile-deps-{{ .Branch }}-{{ checksum "mobile/yarn.lock" }}
      - run:
          name: test app
          working_directory: ~/pauling/mobile
          command: yarn test-ci

  build_api:
    working_directory: ~/pauling
    docker:
      - image: python:3.6.0
    steps:
      - checkout
      - restore_cache:
          key: api-deps-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}
      - run:
          name: make bootstrap
          working_directory: ~/pauling/api
          command: make bootstrap
      - save_cache:
          key: api-deps-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}
          paths:
            - ~/pauling/api/venv

  test_api:
    working_directory: ~/pauling
    docker:
      - image: python:3.6.0
        environment:
          FLASK_CONFIG: testing
          DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
          SECRET_KEY: 'secretkey'
          CLOUDINARY_URL: ''
          CLOUDINARY_BASE_URL: 'https://res.cloudinary.com/tailordev'
      - image: postgres:9.6-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: api-deps-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}
      - run:
          name: make test-ci
          working_directory: ~/pauling/api
          command: make test-ci
      - store_test_results:
          path: /reports

  deploy_api:
    working_directory: ~/pauling
    docker:
      - image: python:3.6.0
    steps:
      - checkout
      - run:
          name: setup Heroku deployment
          command: bash .circleci/heroku-setup.sh
      - add_ssh_keys:
          fingerprints:
            - "SHA256:T2bQRNgGRXJm0ko8chtHswXMTP6ObmDBhVXuD34qMV4"
      - deploy:
          name: deploy master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              make deploy-api
              heroku run FLASK_APP=server.py flask db upgrade
            fi

workflows:
  version: 2
  mobile:
    jobs:
      - build_mobile
      - lint_mobile:
          requires:
            - build_mobile
      - test_mobile:
          requires:
            - build_mobile
  api:
    jobs:
      - build_api
      - test_api:
          requires:
            - build_api
      - deploy_api:
          requires:
            - test_api
          filters:
            branches:
              only: master
